/* eslint-disable @next/next/no-img-element */
import Head from "next/head";
import { useState } from "react";
import { Input } from "../components/Input";
import { Book } from "../services/BooksServices";
import { getReadingTime } from "../utils/functions/getReadingTime";

export default function Home() {
  const [selectedBook, setSelectedBook] = useState<Book>();
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex justify-center w-screen h-screen py-10">
        <div className="flex flex-col items-center w-3/4 space-y-4">
          <Input setSelectedBook={setSelectedBook} />
          {selectedBook && (
            <div className="grid w-full h-full max-w-2xl grid-cols-12 gap-10">
              {selectedBook.volumeInfo.imageLinks?.thumbnail ? (
                <div className="flex items-start justify-start w-full col-span-4 ">
                  <img
                    src={
                      selectedBook.volumeInfo.imageLinks?.thumbnail ??
                      selectedBook.volumeInfo.imageLinks?.smallThumbnail
                    }
                    alt={`${selectedBook.volumeInfo.title} cover`}
                    className="object-contain w-full rounded-md"
                    onError={(e) => console.log(e)}
                  />
                </div>
              ) : (
                <img
                  src="https://archive.org/download/placeholder-image/placeholder-image.jpg"
                  alt={`${selectedBook.volumeInfo.title} cover`}
                  height={83}
                  width={128}
                  className="object-cover w-full rounded-md"
                  onError={(e) => console.log(e)}
                />
              )}
              <div className="flex flex-col col-span-8">
                <span>{selectedBook.volumeInfo.title}</span>
                <span>{selectedBook.volumeInfo.publishedDate}</span>
                <span>{selectedBook.volumeInfo.pageCount ?? "?"} pages</span>
                <span>
                  {getReadingTime(selectedBook.volumeInfo.pageCount)} minutes to
                  read
                </span>
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  );
}
